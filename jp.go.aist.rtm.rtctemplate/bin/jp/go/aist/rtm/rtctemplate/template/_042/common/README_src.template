======================================================================
  RTComponent: ${rtcParam.name} specificatioin

  OpenRTM-aist-${rtcParam.rtmVersion}
  Date: $Date$

  This file is generated by rtc-template with the following argments.

#parse("jp/go/aist/rtm/rtctemplate/template/common/commandline.template")


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: ${rtcParam.name}
Description: ${rtcParam.description}
Version:     ${rtcParam.version}
Vendor:      ${rtcParam.vender}
Category:    ${rtcParam.category}
Comp. Type:  ${rtcParam.componentType}
Act. Type:   ${rtcParam.activityType}
MAX Inst.:   ${rtcParam.maxInstance}
Lang:        ${rtcParam.language}
Lang Type:   

# </rtc-template>


======================================================================
    Activity definition
======================================================================

[Initializing]

[Ready]
	[Entry]
	[Do]
	[Exit]

[Starting]

[Active]
	[Entry]
	[Do]
	[Exit]

[Stopping]

[Error]
	[Entry]
	[Do]
	[Exit]


[Fatal Error]
	[Entry]
	[Do]
	[Exit]

[Exiting]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">
#if(${rtcParam.inports.size()}>0)InPorts:#end
#set($count = 0)

#foreach($port in ${rtcParam.inports})
#if(${port.type}!="")  Name:             ${port.name}
  VarName:          ${port.name}
  PortNumber:       $count
#set($count = $count + 1)
  Description:      
  Type:             ${port.type}
  InterfaceType:    CorbaPort
  DataflowType:     Push,Pull
  SubscriptionType: Periodic,New,Flush
  MaxOut: 

#end
#end

# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">
#if(${rtcParam.outports.size()}>0)OutPorts:#end

#foreach($port in ${rtcParam.outports})
#if(${port.type}!="")  Name:             ${port.name}
  VarName:          ${port.name}
  PortNumber:       $count
#set($count = $count + 1)
  Description:      
  Type:             ${port.type}
  InterfaceType:    CorbaPort
  DataflowType:     Push,Pull
  SubscriptionType: Periodic,New,Flush
  MaxOut: 

#end
#end

# </rtc-template>


======================================================================
    Service provider definition
======================================================================
# <rtc-template block="serviceProvider">
#if(${rtcParam.providerReferences.size()}>0)ServiceProviderPorts:
#end
#foreach($serviceReferenceParam in ${rtcParam.providerReferences})
  PortName:    ${serviceReferenceParam.interfaceName}
  Description: 
  InterfaceDescription: 
  Position:    RIGHT
  Interfaces:
    Name:         ${serviceReferenceParam.name}
    Description:  
    Type:         ${serviceReferenceParam.type}
    Direction:    Provided
    InstanceName: ${serviceReferenceParam.name}
    IDLfile:      ${serviceReferenceParam.type}.idl
    FilePath:         

#end
# </rtc-template> 

======================================================================
    Service consumer definition
======================================================================
# <rtc-template block="serviceConsumer">
#if(${rtcParam.consumerReferences.size()}>0)ServiceConsumerPorts:
#end
#foreach($serviceReferenceParam in ${rtcParam.consumerReferences})
  PortName:    ${serviceReferenceParam.interfaceName}
  Description: 
  InterfaceDescription: 
  Position:    LEFT
  Interfaces:
    Name:         ${serviceReferenceParam.name}
    Description:  
    Type:         ${serviceReferenceParam.type}
    Direction:    Required
    InstanceName: ${serviceReferenceParam.name}
    IDLfile:      ${serviceReferenceParam.type}.idl
    FilePath:         

#end
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
#if( ${rtcParam.configParams.size()} > 0 )
Configuration:
#foreach($configParam in ${rtcParam.configParams})  
  Name:         ${configParam.name}
  Description:  description
  Type:         ${configParam.type}
  DefaultValue: ${configParam.defaultVal}
  Range:        range
  Unit:         unit
  Constraint:   constraint

#end
#end
# </rtc-template> 

This area is reserved for future OpenRTM.

